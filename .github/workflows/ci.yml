name: CI - Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # TESTS UNITAIRES (AVANT LE BUILD !)
      - name: Run Unit Tests
        run: |
          cd backend
          npm install
          npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Installer docker-compose
      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Build des images
      - name: Build Docker Images
        run: |
          docker build -t tp-backend ./backend
          docker build -t tp-frontend ./frontend
          docker build -t tp-db ./database

      # Démarrer les services
      - name: Start services
        run: |
          docker-compose up -d

      # Attendre que le backend soit prêt
      - name: Wait for backend
        run: |
          echo "Attente du backend (max 60s)..."
          for i in {1..30}; do
            if curl -f http://localhost:3000/api >/dev/null 2>&1; then
              echo "Backend est prêt !"
              break
            fi
            echo "En attente... ($i/30)"
            sleep 2
          done
          if [ $i -eq 30 ]; then
            echo "Timeout : backend non démarré"
            exit 1
          fi

      # Tester l'API
      - name: Test API Endpoint
        run: |
          echo "Test de /api"
          curl -f http://localhost:3000/api

      # Tester la base de données
      - name: Test DB Endpoint
        run: |
          echo "Test de /db"
          curl -f http://localhost:3000/db

      # Afficher les logs en cas d'échec
      - name: Show logs on failure
        if: failure()
        run: |
          echo "Logs des conteneurs :"
          docker-compose logs
